///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Hello
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SearchNewKeywordDataTransferBetweenRecordingModules recording.
    /// </summary>
    [TestModule("c8dc7deb-dd97-4793-a642-df8b5487ed3d", ModuleType.Recording, 1)]
    public partial class SearchNewKeywordDataTransferBetweenRecordingModules : ITestModule
    {
        /// <summary>
        /// Holds an instance of the HelloRepository repository.
        /// </summary>
        public static HelloRepository repo = HelloRepository.Instance;

        static SearchNewKeywordDataTransferBetweenRecordingModules instance = new SearchNewKeywordDataTransferBetweenRecordingModules();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SearchNewKeywordDataTransferBetweenRecordingModules()
        {
            searchResultsAsKeywordResults = "";
            searchResultsAsKeyword = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SearchNewKeywordDataTransferBetweenRecordingModules Instance
        {
            get { return instance; }
        }

#region Variables

        string _searchResultsAsKeywordResults;

        /// <summary>
        /// Gets or sets the value of variable searchResultsAsKeywordResults.
        /// </summary>
        [TestVariable("03f6a44a-29a5-4498-9138-b4646f4ce7ba")]
        public string searchResultsAsKeywordResults
        {
            get { return _searchResultsAsKeywordResults; }
            set { _searchResultsAsKeywordResults = value; }
        }

        string _searchResultsAsKeyword;

        /// <summary>
        /// Gets or sets the value of variable searchResultsAsKeyword.
        /// </summary>
        [TestVariable("cbae47b4-a60d-483b-959d-d0401d91ebb6")]
        public string searchResultsAsKeyword
        {
            get { return _searchResultsAsKeyword; }
            set { _searchResultsAsKeyword = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'http://google.com' with browser 'chrome' in normal mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser("http://google.com", "chrome", "", false, false, false, false, false);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Google.SearchField' at Center.", repo.Google.SearchFieldInfo, new RecordItemIndex(1));
            repo.Google.SearchField.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "User", searchResultsAsKeyword, new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$searchResultsAsKeyword' with focus on 'Google.SearchField'.", repo.Google.SearchFieldInfo, new RecordItemIndex(3));
            repo.Google.SearchField.PressKeys(searchResultsAsKeyword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'Google.SearchField'.", repo.Google.SearchFieldInfo, new RecordItemIndex(4));
            repo.Google.SearchField.PressKeys("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Google.SearchButton' at Center.", repo.Google.SearchButtonInfo, new RecordItemIndex(5));
            repo.Google.SearchButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'Google.ResultStats' and assigning its value to variable 'searchResultsAsKeywordResults'.", repo.Google.ResultStatsInfo, new RecordItemIndex(6));
            searchResultsAsKeywordResults = repo.Google.ResultStats.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", searchResultsAsKeywordResults, new RecordItemIndex(7));
            
            TimeCollection.UpdateInputFile("SRK_Results", searchResultsAsKeywordResults);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
